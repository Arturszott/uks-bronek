@import '~variables';

$net-color: $pale-blue;

.team-net {
  position: relative;

  $net-width: 80px;
  $net-rows: 8;
  $net-size: 26px;
  $net-line-width: 2px;

  .bottom-line {
    position: absolute;
    width: 100%;
    bottom: 0;
    left: 30px;
    border-bottom: 3px solid $dark-blue;
  }

  .net-pole {
    background: $net-color;
    width: 10px;
    right: $net-width - $net-line-width;
    bottom: 0;
    position: absolute;
    height: calc(100% + 20px);
  }

  // thanks Lea Verou! http://lea.verou.me/css3patterns/#blueprint-grid
  .net-pattern {
    transition: transform 0.6s ease;
    position: absolute;
    top: 0;
    right: 0;
    width: $net-width;
    height: ($net-rows * $net-size + $net-line-width);
    background-image: linear-gradient($net-color $net-line-width, transparent $net-line-width),
    linear-gradient(90deg, $net-color $net-line-width, transparent $net-line-width);
    background-size: $net-size $net-size, $net-size $net-size;

    &.large {
      transform: translateY(10%);
    }

    &.big {
      transform: translateY(20%);
    }

    &.medium {
      transform: translateY(30%);
    }

    &.small {
      transform: translateY(40%);
    }
  }

  .net-height-text {
    @include font-headline();
    position: absolute;
    display: inline-block;
    transform: rotate(-90deg) translateX(100%);
    letter-spacing: 2px;
    transform-origin: 100% 0;

    right: 120px;
    bottom: 100px;

    color: lighten($light-blue, 10);

    .unit {
      display: inline-block;
      margin-left: 10px;
      font-weight: bold;
    }
  }

  @include sm-max() {
    .net-pole {
      width: 5px;
      right: ($net-width / 4) - $net-line-width;
    }

    .bottom-line {

    }

    .net-pattern {
      width: ($net-width / 4);
      height: ($net-rows * ($net-size) + $net-line-width);
      background-image: linear-gradient($net-color $net-line-width, transparent $net-line-width),
      linear-gradient(90deg, $net-color $net-line-width, transparent $net-line-width);
      background-size: ($net-size / 2) ($net-size / 2), ($net-size / 2) ($net-size / 2);
    }

    .net-height-text {
      display: none;
    }
  }
}

